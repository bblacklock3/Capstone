%% Math checking if portion of curve falls outside acceptable bounds





[fitresult, gof] = createFit(T_Hip, Hip)


function [fitresult, gof] = createFit(T_Hip, Hip)
%CREATEFIT(T_HIP,HIP)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : T_Hip
%      Y Output: Hip
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 07-Mar-2022 19:16:35


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( T_Hip, Hip );

% Set up fittype and options.
ft = fittype( 'sin8' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf];
opts.StartPoint = [151.706102851496 0.0261942279604669 0.0222716768484426 101.85774655258 0.0523884559209337 1.66785490881685 18.8156746836207 0.104776911841867 1.60935434574159 1.83432957155534 0.209553823683735 1.51917469342994 2.60135114817003 0.261942279604669 1.47415125980612 1.82577392016055 0.314330735525602 1.35236278744718 0.758887242460716 0.471496103288404 1.32981100609222 2.41474609044585 0.157165367762801 0.0718724545674817];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'Hip vs. T_Hip', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'T_Hip', 'Interpreter', 'none' );
ylabel( 'Hip', 'Interpreter', 'none' );
grid on

end


